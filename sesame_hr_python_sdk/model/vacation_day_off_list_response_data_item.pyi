# coding: utf-8

"""
    Sesame Public API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from sesame_hr_python_sdk import schemas  # noqa: F401


class VacationDayOffListResponseDataItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            id = schemas.UUIDSchema
            date = schemas.DateSchema
            seconds = schemas.IntSchema
        
            @staticmethod
            def calendar() -> typing.Type['VacationDayOffListResponseDataItemCalendar']:
                return VacationDayOffListResponseDataItemCalendar
        
            @staticmethod
            def employee() -> typing.Type['VacationDayOffListResponseDataItemEmployee']:
                return VacationDayOffListResponseDataItemEmployee
            __annotations__ = {
                "id": id,
                "date": date,
                "seconds": seconds,
                "calendar": calendar,
                "employee": employee,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date"]) -> MetaOapg.properties.date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["seconds"]) -> MetaOapg.properties.seconds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["calendar"]) -> 'VacationDayOffListResponseDataItemCalendar': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employee"]) -> 'VacationDayOffListResponseDataItemEmployee': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "date", "seconds", "calendar", "employee", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date"]) -> typing.Union[MetaOapg.properties.date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["seconds"]) -> typing.Union[MetaOapg.properties.seconds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["calendar"]) -> typing.Union['VacationDayOffListResponseDataItemCalendar', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employee"]) -> typing.Union['VacationDayOffListResponseDataItemEmployee', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "date", "seconds", "calendar", "employee", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, uuid.UUID, schemas.Unset] = schemas.unset,
        date: typing.Union[MetaOapg.properties.date, str, date, schemas.Unset] = schemas.unset,
        seconds: typing.Union[MetaOapg.properties.seconds, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        calendar: typing.Union['VacationDayOffListResponseDataItemCalendar', schemas.Unset] = schemas.unset,
        employee: typing.Union['VacationDayOffListResponseDataItemEmployee', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'VacationDayOffListResponseDataItem':
        return super().__new__(
            cls,
            *args,
            id=id,
            date=date,
            seconds=seconds,
            calendar=calendar,
            employee=employee,
            _configuration=_configuration,
            **kwargs,
        )

from sesame_hr_python_sdk.model.vacation_day_off_list_response_data_item_calendar import VacationDayOffListResponseDataItemCalendar
from sesame_hr_python_sdk.model.vacation_day_off_list_response_data_item_employee import VacationDayOffListResponseDataItemEmployee
