# coding: utf-8

"""
    Sesame Public API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from sesame_hr_python_sdk import schemas  # noqa: F401


class WorkEntriesCreateNewEntryResponseData(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            id = schemas.UUIDSchema
            workCheckTypeId = schemas.UUIDSchema
        
            @staticmethod
            def employee() -> typing.Type['WorkEntriesCreateNewEntryResponseDataEmployee']:
                return WorkEntriesCreateNewEntryResponseDataEmployee
            workEntryType = schemas.StrSchema
        
            @staticmethod
            def workEntryIn() -> typing.Type['WorkEntriesCreateNewEntryResponseDataWorkEntryIn']:
                return WorkEntriesCreateNewEntryResponseDataWorkEntryIn
        
            @staticmethod
            def workEntryOut() -> typing.Type['WorkEntriesCreateNewEntryResponseDataWorkEntryOut']:
                return WorkEntriesCreateNewEntryResponseDataWorkEntryOut
            workedSeconds = schemas.Float32Schema
            createdAt = schemas.StrSchema
            updatedAt = schemas.StrSchema
            deletedAt = schemas.StrSchema
            __annotations__ = {
                "id": id,
                "workCheckTypeId": workCheckTypeId,
                "employee": employee,
                "workEntryType": workEntryType,
                "workEntryIn": workEntryIn,
                "workEntryOut": workEntryOut,
                "workedSeconds": workedSeconds,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "deletedAt": deletedAt,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workCheckTypeId"]) -> MetaOapg.properties.workCheckTypeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employee"]) -> 'WorkEntriesCreateNewEntryResponseDataEmployee': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workEntryType"]) -> MetaOapg.properties.workEntryType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workEntryIn"]) -> 'WorkEntriesCreateNewEntryResponseDataWorkEntryIn': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workEntryOut"]) -> 'WorkEntriesCreateNewEntryResponseDataWorkEntryOut': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workedSeconds"]) -> MetaOapg.properties.workedSeconds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdAt"]) -> MetaOapg.properties.createdAt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updatedAt"]) -> MetaOapg.properties.updatedAt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deletedAt"]) -> MetaOapg.properties.deletedAt: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "workCheckTypeId", "employee", "workEntryType", "workEntryIn", "workEntryOut", "workedSeconds", "createdAt", "updatedAt", "deletedAt", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workCheckTypeId"]) -> typing.Union[MetaOapg.properties.workCheckTypeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employee"]) -> typing.Union['WorkEntriesCreateNewEntryResponseDataEmployee', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workEntryType"]) -> typing.Union[MetaOapg.properties.workEntryType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workEntryIn"]) -> typing.Union['WorkEntriesCreateNewEntryResponseDataWorkEntryIn', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workEntryOut"]) -> typing.Union['WorkEntriesCreateNewEntryResponseDataWorkEntryOut', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workedSeconds"]) -> typing.Union[MetaOapg.properties.workedSeconds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdAt"]) -> typing.Union[MetaOapg.properties.createdAt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updatedAt"]) -> typing.Union[MetaOapg.properties.updatedAt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deletedAt"]) -> typing.Union[MetaOapg.properties.deletedAt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "workCheckTypeId", "employee", "workEntryType", "workEntryIn", "workEntryOut", "workedSeconds", "createdAt", "updatedAt", "deletedAt", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, uuid.UUID, schemas.Unset] = schemas.unset,
        workCheckTypeId: typing.Union[MetaOapg.properties.workCheckTypeId, str, uuid.UUID, schemas.Unset] = schemas.unset,
        employee: typing.Union['WorkEntriesCreateNewEntryResponseDataEmployee', schemas.Unset] = schemas.unset,
        workEntryType: typing.Union[MetaOapg.properties.workEntryType, str, schemas.Unset] = schemas.unset,
        workEntryIn: typing.Union['WorkEntriesCreateNewEntryResponseDataWorkEntryIn', schemas.Unset] = schemas.unset,
        workEntryOut: typing.Union['WorkEntriesCreateNewEntryResponseDataWorkEntryOut', schemas.Unset] = schemas.unset,
        workedSeconds: typing.Union[MetaOapg.properties.workedSeconds, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        createdAt: typing.Union[MetaOapg.properties.createdAt, str, schemas.Unset] = schemas.unset,
        updatedAt: typing.Union[MetaOapg.properties.updatedAt, str, schemas.Unset] = schemas.unset,
        deletedAt: typing.Union[MetaOapg.properties.deletedAt, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'WorkEntriesCreateNewEntryResponseData':
        return super().__new__(
            cls,
            *args,
            id=id,
            workCheckTypeId=workCheckTypeId,
            employee=employee,
            workEntryType=workEntryType,
            workEntryIn=workEntryIn,
            workEntryOut=workEntryOut,
            workedSeconds=workedSeconds,
            createdAt=createdAt,
            updatedAt=updatedAt,
            deletedAt=deletedAt,
            _configuration=_configuration,
            **kwargs,
        )

from sesame_hr_python_sdk.model.work_entries_create_new_entry_response_data_employee import WorkEntriesCreateNewEntryResponseDataEmployee
from sesame_hr_python_sdk.model.work_entries_create_new_entry_response_data_work_entry_in import WorkEntriesCreateNewEntryResponseDataWorkEntryIn
from sesame_hr_python_sdk.model.work_entries_create_new_entry_response_data_work_entry_out import WorkEntriesCreateNewEntryResponseDataWorkEntryOut
