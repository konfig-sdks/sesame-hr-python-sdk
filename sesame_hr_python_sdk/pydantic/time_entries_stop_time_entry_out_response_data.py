# coding: utf-8

"""
    Sesame Public API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from sesame_hr_python_sdk.pydantic.time_entries_stop_time_entry_out_response_data_employee import TimeEntriesStopTimeEntryOutResponseDataEmployee
from sesame_hr_python_sdk.pydantic.time_entries_stop_time_entry_out_response_data_tag_ids import TimeEntriesStopTimeEntryOutResponseDataTagIds
from sesame_hr_python_sdk.pydantic.time_entries_stop_time_entry_out_response_data_time_entry_in import TimeEntriesStopTimeEntryOutResponseDataTimeEntryIn
from sesame_hr_python_sdk.pydantic.time_entries_stop_time_entry_out_response_data_time_entry_out import TimeEntriesStopTimeEntryOutResponseDataTimeEntryOut

class TimeEntriesStopTimeEntryOutResponseData(BaseModel):
    id: typing.Optional[str] = Field(None, alias='id')

    employee: typing.Optional[TimeEntriesStopTimeEntryOutResponseDataEmployee] = Field(None, alias='employee')

    project_id: typing.Optional[str] = Field(None, alias='projectId')

    tag_ids: typing.Optional[TimeEntriesStopTimeEntryOutResponseDataTagIds] = Field(None, alias='tagIds')

    time_entry_in: typing.Optional[TimeEntriesStopTimeEntryOutResponseDataTimeEntryIn] = Field(None, alias='timeEntryIn')

    time_entry_out: typing.Optional[TimeEntriesStopTimeEntryOutResponseDataTimeEntryOut] = Field(None, alias='timeEntryOut')

    comment: typing.Optional[str] = Field(None, alias='comment')

    created_at: typing.Optional[str] = Field(None, alias='createdAt')

    updated_at: typing.Optional[str] = Field(None, alias='updatedAt')

    deleted_at: typing.Optional[typing.Optional[str]] = Field(None, alias='deletedAt')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
